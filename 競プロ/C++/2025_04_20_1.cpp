#include <iostream>
#include <vector>
#include <string>
using namespace std;

/**
N=10からN=100に増えたとき（10倍）：

f0, f3: 変化なし（常に同じ）
f1: 20回 → 200回（10倍に増加）
f2: 40回 → 700回（約17.5倍に増加）
f4: 100回 → 10,000回（100倍に増加）
f5: 100回 → 10,000回（100倍に増加、N=Mの場合）
N=100からN=1000に増えたとき（10倍）：

f0, f3: 変化なし（常に同じ）
f1: 200回 → 2,000回（10倍に増加）
f2: 700回 → 10,000回（約14倍に増加）
f4: 10,000回 → 1,000,000回（100倍に増加）
f5: 10,000回 → 1,000,000回（100倍に増加、N=Mの場合）
 */

// 計算内容: 入力に関係なく常に1を返す関数
// 計算量: O(1) - 定数時間（入力サイズに関わらず同じ時間で実行される）
int f0(int N) {
  return 1;
}

// 計算内容: 0からN-1までと0からM-1までの数をカウントし、その合計(N+M)を返す関数
// 計算量: O(N + M) - 線形時間（入力サイズに比例して実行時間が増加）
int f1(int N, int M) {
  int s = 0;
  for (int i = 0; i < N; i++) {
    s++;
  }
  for (int i = 0; i < M; i++) {
    s++;
  }
  return s;
}

// 計算内容: 各数値(0からN-1まで)について、Nを2で何回割れば0になるか(log₂N)を計算し、その合計を返す関数
// 計算量: O(N log N) - 線形対数時間（外側のループN回と内側のループlog N回の組み合わせ）
int f2(int N) {
  int s = 0;
  for (int i = 0; i < N; i++) {
      int t = N;
      int cnt = 0;
      while (t > 0) {
        cnt++;
        t /= 2;
      }
      s += cnt;
  }
  return s;
}


// 計算内容: 3×3=9回のインクリメント操作を行い、その合計(常に9)を返す関数
// 計算量: O(1) - 定数時間（入力Nに関係なく常に同じ回数の操作を行う）
int f3(int N) {
  int s = 0;
  for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
      s++;
    }
  }
  return s;
}

// 計算内容: 0≤i<Nと0≤j<Nのすべての組み合わせに対して、i+jの合計を計算する関数
// 計算量: O(N²) - 二次時間（二重ループでN×N回の操作を行い、入力サイズの二乗に比例）
// 注意: この関数は最も計算量が大きい（N²は大きなNに対して非常に急速に増加する）
int f4(int N) {
  int s = 0;
  for (int i = 0; i < N; i++) {
    for (int j = 0; j < N; j++) {
      s += i + j;
    }
  }
  return s;
}

// 計算内容: 0≤i<Nと0≤j<Mのすべての組み合わせに対して、i+jの合計を計算する関数
// 計算量: O(N * M) - 二重ループでN×M回の操作（両方の入力サイズの積に比例）
int f5(int N, int M) {
  int s = 0;
  for (int i = 0; i < N; i++) {
    for (int j = 0; j < M; j++) {
      s += i + j;
    }
  }
  return s;
}

// メイン関数: 各関数を実行して結果を表示
// 注: 計算量が最も大きい関数（f4）はコメントアウトされている
int main() {
  int N, M;
  cin >> N >> M;

  int a0 = -1, a1 = -1, a2 = -1, a3 = -1, a4 = -1, a5 = -1;

  // 計算量が最も大きいもの1つだけコメントアウトする（f4はO(N²)で最も計算量が大きい）
//   a0 = f0(N);
  a1 = f1(N, M);
  a2 = f2(N);
  a3 = f3(N);
  a4 = f4(N);
  a5 = f5(N, M);

  cout << "f0: " << a0 << endl;
  cout << "f1: " << a1 << endl;
  cout << "f2: " << a2 << endl;
  cout << "f3: " << a3 << endl;
  cout << "f4: " << a4 << endl;
  cout << "f5: " << a5 << endl;
}
